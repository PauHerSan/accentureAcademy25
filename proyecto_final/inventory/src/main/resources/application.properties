#Application Name
spring.application.name=Super Comics inventory

#Server Configuration
server.port=9191

#Bean Override Configuration
spring.main.allow-bean-definition-overriding= true

# ========================================
# Configuración de MySQL (JPA/Hibernate)
# ========================================

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3307/comics_inventory?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username = root
spring.datasource.password = comics4321
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# ========================================
# Configuración de MongoDB
# ========================================

spring.data.mongodb.uri=mongodb://admin:comics4321@localhost:27017/comics_logs?authSource=admin
spring.data.mongodb.database=comics_logs

# Logging Configuration
logging.level.com.xideral.banco=DEBUG
logging.level.org.springframework.data.mongodb=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.packages-to-scan=com.superComics.inventory.inventory.api,com.superComics.inventory.orders.api
springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json

# Batch Configuration
spring.batch.jdbc.initialize-schema=always
spring.batch.job.enabled=true

